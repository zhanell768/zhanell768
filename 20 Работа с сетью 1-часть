Метод invokesException:
Принимает два параметра: класс исключения и код, который может выбросить исключение.
В блоке try-catch выполняется код, и если выбрасывается исключение, проверяется его тип. Если тип совпадает с переданным, возвращается true.
Если исключение не выбрасывается или его тип не совпадает с ожидаемым, возвращается false.#

interface Callable {
    void call();
}

class ExceptionTask {
    private ExceptionTask() {
    }

    public static <T extends Throwable> boolean invokesException(Class<T> clazz, Callable callable) {
        try {
            callable.call();  // Выполняем переданный код
        } catch (Throwable e) {
            // Проверяем, совпадает ли тип исключения с ожидаемым
            if (clazz.isInstance(e)) {
                return true;  // Если тип исключения совпадает
            }
        }
        return false;  // Если исключение не выброшено или тип не совпадает
    }
}

public class ExceptionTaskMain {
    public static void main(String[] args) {
        // Примеры вызова
        System.out.println("Этот вызов бросает нужное исключение: " +
                ExceptionTask.invokesException(IllegalArgumentException.class, () -> {
                    throw new IllegalArgumentException();
                }));
        System.out.println("Этот вызов не бросает исключение: " +
                ExceptionTask.invokesException(IllegalArgumentException.class, () -> {
                    var a = 2 * 2;
                }));
        System.out.println("Этот вызов бросает не то исключение: " +
                ExceptionTask.invokesException(IllegalArgumentException.class, () -> {
                    throw new ArrayIndexOutOfBoundsException();
                }));
    }
}

Этот вызов бросает нужное исключение: true
Этот вызов не бросает исключение: false
Этот вызов бросает не то исключение: false

